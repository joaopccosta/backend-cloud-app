name: CI/CD Pipeline

on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main
  workflow_dispatch:

permissions:
  id-token: write
  contents: read

env:
    VERSION: ${{ github.ref_type == 'tag' && github.ref_name || format('1.0.{0}', github.run_number) }}
    IMAGE_NAME: backend-cloud-app

jobs:
  test:
    runs-on: ubuntu-latest
    container:
      image: python:3.11
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Backend and Run tests
        run: |
          cd app
          python -m venv venv && . venv/bin/activate && pip install -r requirements.txt && pytest -s -v

  build_and_push_image:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          role-to-assume: arn:aws:iam::${{ secrets.AWS_ACCOUNT_ID }}:role/github_actions
          aws-region: eu-west-1
      
      - name: Install requirements
        run: |
          sudo apt-get update
          sudo apt-get install -y python3-pip
          pip3 install awscli

      - name: Install Docker buildx
        uses: docker/setup-buildx-action@v3

      - name: Build Docker image
        run: |
          cd app
          docker buildx build --platform=linux/arm64 --load -t ${{ env.IMAGE_NAME }}:latest -t ${{ env.IMAGE_NAME }}:$VERSION .
          docker tag ${{ env.IMAGE_NAME }}:latest ${{ secrets.ECR_REGISTRY }}/${{ env.IMAGE_NAME }}:latest
          docker tag ${{ env.IMAGE_NAME }}:$VERSION ${{ secrets.ECR_REGISTRY }}/${{ env.IMAGE_NAME }}:$VERSION

      - name: Push Docker image
        run: |
          cd app
          aws ecr get-login-password --region eu-west-1 | docker login --username AWS --password-stdin ${{ secrets.ECR_REGISTRY }}
          docker push ${{ secrets.ECR_REGISTRY }}/${{ env.IMAGE_NAME }}:latest
          docker push ${{ secrets.ECR_REGISTRY }}/${{ env.IMAGE_NAME }}:$VERSION
